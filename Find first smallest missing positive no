//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends

class Solution
{
    public:
    //Function to find the smallest positive number missing from the array.
    int missingNumber(int arr[], int n) 
    { /* failing in some cases- time limit exceeded
int i;
    int c=0;
        // Your code here
        sort(arr,arr+n);
        
       for (int j = 1; j < arr[n-1]; j++) {
            bool exists = find(arr, arr + n,j) != arr + n;
            if (!exists) {
                return j;
            }
        }
        for(i=0;i<n;i++){
            if(arr[i]<=0)
            c++;
          
        }
        if(c==n)
        return 1;
        return arr[n - 1] + 1;*/
         unordered_set<int> present;

        // Mark the presence of positive elements using the unordered set.
        for (int i = 0; i < n; i++) {
            if (arr[i] > 0 && arr[i] <= n) {
                present.insert(arr[i]);
            }
        }

        // Find the first missing positive number.
        for (int i = 1; i <= n; i++) {
            if (present.find(i) == present.end()) {
                return i;
            }
        }

        // If all positive numbers from 1 to n are present, the missing number is n+1.
        return n + 1;
    }
};

Example 1:

Input:
N = 5
arr[] = {1,2,3,4,5}
Output: 6
Explanation: Smallest positive missing 
number is 6.
Example 2:

Input:
N = 5
arr[] = {0,-10,1,3,-20}
Output: 2
Explanation: Smallest positive missing 
number is 2.




Given an array nums containing n distinct numbers in the range [0, n], 
return the only number in the range that is missing from the array.


class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int n=nums.size();
        unordered_map<int,int>u;
        
        for(int i=0;i<n;i++)
        {
u[nums[i]]++;
        }
        for(int i=0;i<=n;i++)
        {
            if(u.find(i)!=u.end())
            continue;
            else
            return i;
        }
        return -1;
    }
};






 

Example 1:

Input: nums = [3,0,1]
Output: 2
Explanation: n = 3 since there are 3 numbers, so all numbers are in the range [0,3]. 
2 is the missing number in the range since it does not appear in nums.
Example 2:

Input: nums = [0,1]
Output: 2
Explanation: n = 2 since there are 2 numbers, so all numbers are in the range [0,2]. 
2 is the missing number in the range since it does not appear in nums.
